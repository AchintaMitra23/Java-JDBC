Driver Manager Class :- 

1) public static void registerDriver(Driver driver):										Used to register the given driver with DriverManager.
2) public static void deregisterDriver(Driver driver):										Used to delete register the given driver (drop the driver from the list) with DriverManager.
3) public static Connection getConnection(String URL):										Used to establish the connection with the specified URL.
4) public static Connection getConnection(String URL,String userName,String password):		Used to establish the connection with the specified URL, user name and password.

Connection Interface :- 

1) public Statement createStatement(): 														Creates a statement object that can be used to execute SQL queries.
2) public Statement createStatement(int resultSetType,int resultSetConcurrency): 			Creates a Statement object that will generate ResultSet objects with the given type and concurrency.
3) public void setAutoCommit(boolean status): 												Used to set the commit status.By default it is true.
4) public void commit(): 																	Saves the changes made since the previous commit/roll back permanent.
5) public void rollback(): 																	Drops all changes made since the previous commit/roll back.
6) public void close(): 																	Closes the connection and Releases a JDBC resources immediately.

Statement Interface :- 

1) public ResultSet executeQuery(String SQL): 												Used to execute SELECT query. It returns the object of ResultSet.
2) public int executeUpdate(String SQL): 													Used to execute specified query, it may be create, drop, insert, update, delete etc.
3) public boolean execute(String SQL): 														Used to execute queries that may return multiple results.
4) public int[] executeBatch(): 															Used to execute batch of commands.

Result Set Interface :-

1) public boolean next():																	Used to move the cursor to the one row next from the current position.
2) public boolean previous():																Used to move the cursor to the one row previous from the current position.
3) public boolean first():																	Used to move the cursor to the first row in result set object.
4) public boolean last():																	Used to move the cursor to the last row in result set object.
5) public boolean absolute(int row):														Used to move the cursor to the specified row number in the ResultSet object.
6) public boolean relative(int row):														Used to move the cursor to the relative row number in the ResultSet object, it may be positive or negative.
7) public int getInt(int columnIndex):														Used to return the data of specified column index of the current row as int.
8) public int getInt(String columnName):													Used to return the data of specified column name of the current row as int.
9) public String getString(int columnIndex):												Used to return the data of specified column index of the current row as String.
10) public String getString(String columnName):												Used to return the data of specified column name of the current row as String.

PreparedStatement Interface :- 

public void setInt(int paramIndex, int value)												Sets the integer value to the given parameter index.
public void setString(int paramIndex, String value)											Sets the String value to the given parameter index.
public void setFloat(int paramIndex, float value)											Sets the float value to the given parameter index.
public void setDouble(int paramIndex, double value)											Sets the double value to the given parameter index.
public int executeUpdate()																	Executes the query. It is used for create, drop, insert, update, delete etc.
public ResultSet executeQuery()																Executes the select query. It returns an instance of ResultSet.

ResultSetMetaData Interface :- 

public int getColumnCount()throws SQLException												Returns the total number of columns in the ResultSet object.
public String getColumnName(int index)throws SQLException									Returns the column name of the specified column index.
public String getColumnTypeName(int index)throws SQLException								Returns the column type name for the specified index.
public String getTableName(int index)throws SQLException									Returns the table name for the specified column index.

DatabaseMetaData Interface :- 

public String getDriverName()throws SQLException: 																				Returns the name of the JDBC driver.
public String getDriverVersion()throws SQLException: 																			Returns the version number of the JDBC driver.
public String getUserName()throws SQLException: 																				Returns the user name of the database.
public String getDatabaseProductName()throws SQLException: 																		Returns the product name of the database.
public String getDatabaseProductVersion()throws SQLException: 																	Returns the product version of the database.
public ResultSet getTables(String catalog, String schemaPattern, String tableNamePattern, String[] types)throws SQLException: 	Returns the description of the tables of the specified catalog. The table type can be TABLE, VIEW, ALIAS, SYSTEM TABLE, SYNONYM etc.

Transaction Management :- 

void setAutoCommit(boolean status)															It is true by default means each transaction is committed bydefault.
void commit()																				commits the transaction.
void rollback()																				cancels the transaction.

Batch Processing (Statement Interface) :- 

void addBatch(String query)																	It adds query into batch.
int[] executeBatch()																		It executes the batch of queries.